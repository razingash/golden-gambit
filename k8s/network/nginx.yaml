apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: frontend
data:
  nginx.conf: |
    events {
        worker_connections 2048;
    }
    
    http {
        upstream backend {
            server django-rest.backend.svc.cluster.local:8000;
        }
    
        upstream frontend {
            server react:3001; # bcs nginx and react have the same namespace
        }
    
        server_tokens off;
    
        server {
            listen 80;
            server_name localhost;
    
            send_timeout 10;
            client_body_timeout 5s;
            client_header_timeout 5s;
    
            gzip on;
            gzip_min_length 100;
            gzip_comp_level 3;
            gzip_types text/css image/x-icon application/javascript application/x-javascript text/javascript;
            gzip_disable msie6;
    
            location /api/v1/ {
                proxy_pass http://backend;
    
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
    
            location /api/sse/ {
                proxy_pass http://backend;
    
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
    
                proxy_buffering off;
                proxy_cache off;
                chunked_transfer_encoding off;
    
                keepalive_timeout 1h;
                proxy_connect_timeout 1m;
                proxy_send_timeout 10s;
                proxy_read_timeout 20s;
            }
    
            location /ws/ {
                proxy_pass http://backend/ws/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
    
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
    
            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                add_header X-Frame-Options SAMEORIGIN;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 120;
                proxy_read_timeout 120;
                proxy_intercept_errors on;
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              name: nginx-config
          command: [ "/bin/sh", "-c", "if [ ! -f /etc/nginx/ssl/nginx.key ]; then mkdir -p /etc/nginx/ssl &&
                      openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key 
                      -out /etc/nginx/ssl/nginx.crt -subj '/CN=localhost'; fi && nginx -g 'daemon off;'" ]
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: frontend
  #sessionAffinity: ClientIP
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
  selector:
    app: nginx