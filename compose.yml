version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - localnet

  grafana: # визуализация
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - localnet
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: 'macroeconomics_simulator'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'root'
    ports:
      - "5432:5432"
    networks:
      - localnet

  redis: # used for caching, websockets and one periodic task
    image: redis:7.2.4
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - localnet

  rabbitmq:
    image: rabbitmq:4.0.3
    container_name: rabbitmq
    ports:
      - "5672:5672"
    networks:
      - localnet

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    container_name: rabbitmq_exporter
    ports:
      - "9419:9419"
    depends_on:
      - rabbitmq
    environment:
      RABBIT_URL: "http://guest:guest@rabbitmq:15672"
    networks:
      - localnet

  react:
    build: ./frontend
    container_name: react_mes
    ports:
      - "3001:3001"
    environment: # instead of 192.168.1.25 write your local IPV4 address
      - PORT=3001
      - REACT_APP_BASE_URL=http://192.168.1.25:80/api/v1
      - REACT_APP_BASE_SSE_URL=http://192.168.1.25:80/api/sse
      - REACT_APP_WEBSOCKET_URL=ws://192.168.1.25:80/ws
    command: >
      sh -c "npm start"
    restart: unless-stopped
    networks:
      - localnet

  django-rest:
    build:
      context: ./macroeconomics_simulator
    container_name: django-rest_mes
    depends_on:
      - redis
      - rabbitmq
      - postgres
    ports:
      - "8000:8000"
    environment:
      DJANGO_SETTINGS_MODULE: macroeconomics_simulator.settings.dockerized
    volumes:
      - media_data:/app/media
    command: >
      sh -c "python manage.py initialization && python manage.py runserver 0.0.0.0:8000 --settings=macroeconomics_simulator.settings.dockerized"
    restart: unless-stopped
    networks:
      - localnet

  celery-worker-redis:
    build:
      context: ./macroeconomics_simulator
    container_name: celery-worker-redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
      DJANGO_SETTINGS_MODULE: macroeconomics_simulator.settings.dockerized
    depends_on:
      - redis
    volumes:
      - media_data:/app/media
    command: >
      sh -c "sleep 25 && celery -A macroeconomics_simulator worker -l info --queues=redis_queue"
    networks:
      - localnet

  celery-worker-rabbit:
    build:
      context: ./macroeconomics_simulator
    container_name: celery-worker-rabbit
    environment:
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      DJANGO_SETTINGS_MODULE: macroeconomics_simulator.settings.dockerized
    depends_on:
      - rabbitmq
    volumes:
      - media_data:/app/media
    command: >
      sh -c "sleep 25 && celery -A macroeconomics_simulator worker -l info --queues=rabbitmq_queue"
    networks:
      - localnet

  celery-beat: # using rabbitMQ
    build:
      context: ./macroeconomics_simulator
    container_name: celery_beat
    environment:
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      DJANGO_SETTINGS_MODULE: macroeconomics_simulator.settings.dockerized
    depends_on:
      - redis
      - celery-worker-redis
      - celery-worker-rabbit
    command: >
      sh -c "sleep 30 && celery -A macroeconomics_simulator beat -l INFO"
    networks:
      - localnet

  nginx:
    image: nginx
    container_name: nginx_mes
    depends_on:
      - django-rest
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    command: >
      /bin/sh -c "
      if [ ! -f /etc/nginx/ssl/nginx.key ]; then
        mkdir -p /etc/nginx/ssl && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt -subj '/CN=localhost';
      fi &&
      nginx -g 'daemon off;'"
    networks:
      - internet
      - localnet

volumes:
  media_data:

networks:
  internet:
    name: internet
    driver: bridge
  localnet:
    name: localnet
    driver: bridge
